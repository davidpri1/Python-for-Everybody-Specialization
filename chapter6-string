text = "X-DSPAM-Confidence:    0.8475";
pos = text.find('0') # beginning with "0" position # return only the first finding, then stop
str_output = text[pos:] # []beginning with "0" position; len() starts with "1" 
# last=fruit[len(fruit)-1] is the same as last = fruit[-1]
flo_output = float (str_output)
print flo_output

# traversal through a string
i = 0
fruit = 'banana'
while i < len(fruit):
    print fruit[i]
    i = i + 1
;
i = 0
fruit = 'banana'
for i in fruit:
    print i

# string slice, The operator [n:m] including the ﬁrst but excluding the last.
>>> fruit[:3] 'ban' # starting from the first letter of string 
>>> fruit[3:] 'ana' # starting from the 3rd position of the string
>>> fruit[3:3] '' # this is an empty string
>>> fruit[:] 'banana'

# strings are immutable
>>> greeting = 'Hello, world!' 
>>> new_greeting = 'J' + greeting[1:] 
>>> print new_greeting 

# frequency??
word = 'banana'
count = 0
for i in word:
    if i == 'a':
        count = count +1
print count # When the loop exits, count contains the result
# Encapsulate this code in a function named count, and generalize it so that it accepts the string and the letter as arguments
def count(word,letter):
    freq = 0
    for i in word:
        if i == letter:
            freq = freq + 1
        else: # if the enter is a string
            while letter in word:
                freq = freq + 1
                pos = word.find(letter)
                word = word[pos+len(letter):]
    return freq
enter_word = raw_input("Enter words:") #'banana'
enter_letter = raw_input("Enter words:") #'a'as letteror "an" as string
print count(enter_word,enter_letter)


