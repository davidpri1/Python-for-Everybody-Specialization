# tuples are immutable, list is mutable; 
# t1 = ('a',) # single element typle must include the final comma
  t = tuple() # built-in function 
  print tuple('lupins')  -> ('l','u','p','i','n','s'); print t[0] -> 'l'; print t[1:3] -> ('u','p')
  t = ('A',) + t[1:] -> ('A','u','p','i','n','s')  # can't modify the elements of a tuple, but can replace on tuple with another
# comparing: (0,1,2)<(0,3,4), (0,1,20000) < (0,3,4)
  dev sort_by_length(words):
      lst = list()
      for word in words:
          lst.append(len(word),word) # len() goes before word, so when comparing, it's compairing the len() first, then word
      lst.sort()(reverse = True)  # sort by first element - length - descending
      lst2 = list()
      for length, word in lst:
          lst2.append(word)
      return lst2
# assigning: m = [ 'have', 'fun' ], x,y = m; a,b = b, a
